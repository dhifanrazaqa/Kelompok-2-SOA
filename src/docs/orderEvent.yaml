swagger: "2.0"
info:
  title: Order Events API
  description: Order management routes for events
  version: "1.0.0"
tags:
  - name: Order Events
    description: Order management routes for events
paths:
  /api/event/order:
    get:
      summary: Get all order events
      tags:
        - Order Events
      responses:
        200:
          description: A list of all order events
    post:
      summary: Create a new order event
      tags:
        - Order Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The user ID for the order (must be a valid UUID)
                  example: "550e8400-e29b-41d4-a716-446655440000"
                eventId:
                  type: string
                  description: The event ID for the order (must be a valid UUID)
                  example: "123e4567-e89b-12d3-a456-426614174000"
                title:
                  type: string
                  description: The title of the order
                  example: "Tech Conference 2026"
                description:
                  type: string
                  description: Additional details about the order (optional)
                  example: "Tech Conference 2026 is a premier event for tech enthusiasts."
                  nullable: true
                totalPrice:
                  type: number
                  format: decimal
                  description: The total price of the order
                  example: 99.99
                paymentStatus:
                  type: string
                  description: The payment status of the order
                  enum:
                    - PENDING
                    - COMPLETED
                    - FAILED
                  example: "PENDING"
                orderStatus:
                  type: string
                  description: The order status
                  enum:
                    - PENDING
                    - CONFIRMED
                    - CANCELLED
                  example: "CONFIRMED"
      responses:
        201:
          description: Order event created successfully
        400:
          description: Invalid input
  /api/event/order/{id}:
    get:
      summary: Get order event by ID
      tags:
        - Order Events
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the order event
          schema:
            type: string
      responses:
        200:
          description: The order event record
        404:
          description: Order event not found
    put:
      summary: Update an existing order event
      tags:
        - Order Events
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the order event to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the order
                  example: "Tech Conference 2026"
                description:
                  type: string
                  description: Additional details about the order (optional)
                  example: "Tech Conference 2026 is a premier event for tech enthusiasts."
                  nullable: true
                totalPrice:
                  type: number
                  format: decimal
                  description: The total price of the order
                  example: 99.99
                paymentStatus:
                  type: string
                  description: The payment status of the order
                  enum:
                    - PENDING
                    - COMPLETED
                    - FAILED
                  example: "PENDING"
                orderStatus:
                  type: string
                  description: The order status
                  enum:
                    - PENDING
                    - CONFIRMED
                    - CANCELLED
                  example: "CONFIRMED"
      responses:
        200:
          description: Order event updated successfully
        400:
          description: Invalid input
        404:
          description: Order event not found
    delete:
      summary: Delete an order event by ID
      tags:
        - Order Events
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the order event to delete
          schema:
            type: string
      responses:
        200:
          description: Order event deleted successfully
        404:
          description: Order event not found
