swagger: "2.0"
info:
  title: User API
  description: API documentation for user-related operations
  version: "1.0.0"
tags:
  - name: Users
    description: Operations related to user data
paths:
  /api/user/{id}/tickets:
    get:
      summary: Get all tickets ordered by a specific user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        200:
          description: List of tickets ordered by the user
  /api/user/{id}/organizer:
    get:
      summary: Get the organizer information of a specific user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        200:
          description: User organizer details
  /api/user/{id}/order/tickets:
    get:
      summary: Get all tickets ordered by the user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        200:
          description: List of tickets ordered by the user
  /api/user/{id}/order/events:
    get:
      summary: Get all events ordered by the user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        200:
          description: List of events ordered by the user
  /api/user:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        200:
          description: A list of all users
  /api/user/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        200:
          description: User details
        404:
          description: User not found
    put:
      summary: Update user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the user
                  example: "John Doe"
                email:
                  type: string
                  description: Email of the user
                  example: "john.doe@example.com"
                phone:
                  type: string
                  description: Phone number of the user
                  example: "+1234567890"
                address:
                  type: string
                  description: Address of the user
                  example: "123 Main St, City, Country"
                role:
                  type: string
                  description: Role of the user
                  example: "ADMIN"
      responses:
        200:
          description: User updated successfully
        400:
          description: Invalid input
        404:
          description: User not found
    delete:
      summary: Delete user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
        404:
          description: User not found
